stages:
  - lint
  - test
  - build
  - release

variables:
  BUILD_IMAGE: $ARTIFACTORY_SERVER/sds/sdd-golang-common-ci
  BUILDER_IMAGE: $ARTIFACTORY_SERVER/sds/sdd-ubuntu-golang-builder-ci

include:
  - project: 'sds-dev/releases'
    ref: main
    file: 'releases.yml'

lint:
  stage: lint
  image: $BUILD_IMAGE
  rules:
    # We don't run on tags and default branch
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
      when: never
    - if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
      when: never
    - if: '$CI_COMMIT_TAG !~ "/^$/"'
      when: never
  tags:
    - docker-exec
  script:
    - pnpm install --dir frontend
    - pnpm run --dir frontend build
    - go mod tidy && go mod vendor
    - golangci-lint run -v ./... --allow-parallel-runners --timeout 10m -E bodyclose,gocritic,gofmt,gosec,govet,nestif,nlreturn,revive,rowserrcheck --out-format code-climate | tee gl-code-quality-report.json
    - go fmt ./...
    - go vet -tags=fuse3 ./...
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    paths:
      - gl-code-quality-report.json

jfrog-go-audit:
  stage: test
  rules:
    # We don't run on tags and default branch
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
      when: never
    - if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
      when: never
    - if: '$CI_COMMIT_TAG !~ "/^$/"'
      when: never
  tags:
    - sds
  script:
    # Update upstream package checksums in case they have changed
    - go mod vendor
    # Configure JFrog Artifactory repositories
    - jf config import "${JF_CONFIG}"
    - jf go-config --repo-resolve $ARTIFACTORY_SERVER
    # Audit Go project
    - jf audit --go --licenses --extended-table --min-severity=Medium

test:
  image: $BUILD_IMAGE
  stage: test
  rules:
    # We don't run on tags and default branch
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
      when: never
    - if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
      when: never
    - if: '$CI_COMMIT_TAG !~ "/^$/"'
      when: never
  tags:
    - docker-exec
  services:
    - docker:dind
  script:
    - pnpm install --dir frontend
    - pnpm run --dir frontend build
    - go mod tidy && go mod vendor
    - CI=true go test -tags=fuse3 -v -coverprofile=coverage.txt -covermode=atomic $(go list ./... | grep -v frontend)

build-artifacts:
  stage: build
  image: $BUILDER_IMAGE
  rules :
    - if: '$CI_COMMIT_TAG !~ "/^$/"'
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_MESSAGE !~ /^[Ss]kip/'
      when: never
  tags:
    - docker-exec
  services:
    - docker:dind
  script:
    - jf config import "${JF_CONFIG}"
    - go mod tidy && go mod vendor
    - go build -o go-fuse-cli-amd64-${CI_COMMIT_TAG:-devel} ./cmd/fuse/main.go
    - jf s --licenses go-fuse-cli-amd64-${CI_COMMIT_TAG:-devel} --repo ${ARTIFACTORY_SERVER_BINARY_REPO}
    - jf rt u go-fuse-cli-amd64-${CI_COMMIT_TAG:-devel}  $ARTIFACTORY_SERVER_BINARY_REPO/$CI_PROJECT_NAME/go-fuse-cli-amd64-${CI_COMMIT_TAG:-devel}
    - go build -o go-airlock-cli-amd64-${CI_COMMIT_TAG:-devel} ./cmd/airlock/main.go
    - jf s --licenses go-airlock-cli-amd64-${CI_COMMIT_TAG:-devel} --repo ${ARTIFACTORY_SERVER_BINARY_REPO}
    - jf rt u go-airlock-cli-amd64-${CI_COMMIT_TAG:-devel}  $ARTIFACTORY_SERVER_BINARY_REPO/$CI_PROJECT_NAME/go-airlock-cli-amd64-${CI_COMMIT_TAG:-devel}
    - pnpm install --dir frontend
    - pnpm run --dir frontend build
    - go install github.com/wailsapp/wails/v2/cmd/wails@latest
    - /usr/local/go/bin/wails doctor
    - cd cmd/gui
    - /usr/local/go/bin/wails build -clean -upx -trimpath -s -tags webkit2_41
    - cd ../..
    - mv build/bin/data-gateway data-gateway-amd64-${CI_COMMIT_TAG:-devel}
    - jf s --licenses data-gateway-amd64-${CI_COMMIT_TAG:-devel} --repo ${ARTIFACTORY_SERVER_BINARY_REPO}
    - jf rt u data-gateway-amd64-${CI_COMMIT_TAG:-devel}  $ARTIFACTORY_SERVER_BINARY_REPO/$CI_PROJECT_NAME/data-gateway-amd64-${CI_COMMIT_TAG:-devel}

release:
  extends: .automated-release

  release:
    description: $(cat release_changes.md)
    assets:
      links:
        - name: go-fuse-cli-amd64-${RELEASE_VERSION} (artifactory)
          url: https://$ARTIFACTORY_SERVER/artifactory/$ARTIFACTORY_SERVER_BINARY_REPO/$CI_PROJECT_NAME/go-fuse-cli-amd64-${RELEASE_VERSION}
        - name: go-airlock-cli-amd64-${RELEASE_VERSION} (artifactory)
          url: https://$ARTIFACTORY_SERVER/artifactory/$ARTIFACTORY_SERVER_BINARY_REPO/$CI_PROJECT_NAME/go-airlock-cli-amd64-${RELEASE_VERSION}
        - name: data-gateway-amd64-${RELEASE_VERSION} (artifactory)
          url: https://$ARTIFACTORY_SERVER/artifactory/$ARTIFACTORY_SERVER_BINARY_REPO/$CI_PROJECT_NAME/data-gateway-amd64-${RELEASE_VERSION}
